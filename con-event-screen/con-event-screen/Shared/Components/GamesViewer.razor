@using con_event_services.Interfaces
@using con_event_api.Classes
@using con_event_api
@using con_event_services.Classes
@using Serilog
@inherits LayoutComponentBase
@inject IStateController Controller;
@inject IContentController Content;

@if (Visible)
{
    <MudDataGrid Items="Content.Games" Elevation="0" Class="d-flex flex-grow-1 table-text" Bordered="true" Dense="true" CurrentPage="@Page" RowsPerPage="8" Style="overflow: scroll;">
        <Columns>
            <PropertyColumn 
                Property="x => x.FormattedTitle" 
                Title="Name" 
                CellStyleFunc="@(x => CellStyleFunc(x, x.FormattedTitle))"
                HeaderStyle="@HeaderStyle"/>
            <PropertyColumn 
                Property="x => x.System" 
                Title="System" 
                CellStyleFunc="@(x => CellStyleFunc(x, x.System))"
                HeaderStyle="@HeaderStyle"/>
            <TemplateColumn Title="Tisch" CellStyleFunc="@(x => CellStyleFunc(x, x.Table.FormatedTableName))" HeaderStyle="@HeaderStyle">
                <CellTemplate>
                    <div>
                        @((MarkupString)context.Item.Table.FormatedTableName)
                    </div>
                </CellTemplate>
            </TemplateColumn>
            <PropertyColumn 
                Property="x => x.Free" 
                Title="Plätze" 
                CellStyleFunc="@(x => CellStyleFunc(x, x.Free))"
                HeaderStyle="@HeaderStyle"/>
            <PropertyColumn 
                Property="x => x.FormatedStartDate" 
                Title="Startzeit" 
                CellStyleFunc="@(x => CellStyleFunc(x, x.FormatedStartDate))"
                HeaderStyle="@HeaderStyle"/>
            <PropertyColumn 
                Property="x => x.TimeUntil" 
                Title="Noch" 
                CellStyleFunc="@(x => CellStyleFunc(x, x.TimeUntil))"
                HeaderStyle="@HeaderStyle"/>
        </Columns>
        <PagerContent>
            <MudDataGridPager T="Game" Style="display: none;"/> 
        </PagerContent> 
    </MudDataGrid>
}

@code {
    
    protected override async Task OnInitializedAsync()
    {
        Controller.ContentChanged += async(e, ee) => await ReloadContent(e, ee);
    }
    
    private Func<Game, string, string> CellStyleFunc => (game, value) =>
    {
        var text = "font-weight: bolder; max-width: 400px;";

        switch (value.Length)
        {
            case < 16:
                text += "font-size: 2rem;";
                break;
                
            case < 22:
                text += "font-size: 1.75rem;";
                break;
                
            default:
                text += "font-size: 1.5rem;";
                break;
        }
        if (game.IsPlacesLeft) text += "color: #3e6435;";
        return text;
    };
    
    private Func<Game, string> HeaderStyleFunc => x =>
    {
        var text = "font-size: 2rem; font-weight: bolder;";
        return text;
    };

    private string HeaderStyle => "font-size: 2rem; font-weight: bolder; border-bottom: 1px solid var(--borders);";

    private async Task ReloadContent(object? e, EventArgs ee)
    {
        if (e is int order)
        {
            if (order == Order - 1)
            {
                InvokeAsync(StateHasChanged);
            }
        }
    }
    
    [Parameter]
    public int Order { get; set; }
    
    [Parameter]
    public bool Visible { get; set; }
    
    [Parameter]
    public int Page { get; set; }
}