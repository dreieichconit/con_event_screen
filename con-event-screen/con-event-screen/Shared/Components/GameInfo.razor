@using con_event_services.Interfaces
@using con_event_api.Classes
@inherits LayoutComponentBase
@inject IStateController Controller;

<div class="game-row">
    <div class="game-info w30">
        @GameItem.Title
    </div>
    <div class="game-info w22">
        @GameItem.System
    </div>
    <div class="game-info w12 centered">
        @GameItem.Table.TableName
    </div>
    <div class="@PlayersClass">
        @Free
    </div>
    <div class="game-info w12 centered">
        @GameItem.FormatedStartDate
    </div>
    <div class="game-info w14 centered">
        @TimeUntil
    </div>
</div>

@code {
    
    protected override async Task OnInitializedAsync()
    {
        CalculateDuration();
        
        // Controller.ContentChanged += (e, ee) => CalculateDuration();
    }
    
    [Parameter]
    public Game GameItem { get; set; }

    public string PlayersClass => $"game-info w10 centered {(GameItem.IsPlacesLeft ? "green" : "")}";

    private string Free => $"{GameItem.PlayersJoined}/{GameItem.MaximumPlayers}";
    
    private string TimeUntil { get; set; }
    
    private TimeSpan _timeSpan;

    private void CalculateDuration()
    {
        _timeSpan = (DateTime.UtcNow - GameItem.StartStamp);

        TimeUntil = $"{(_timeSpan.Hours).ToString().PadLeft(2, '0')}h " +
                    $"{(Math.Abs(_timeSpan.Minutes)).ToString().PadLeft(2, '0')}min";

        InvokeAsync(StateHasChanged);
    }
}